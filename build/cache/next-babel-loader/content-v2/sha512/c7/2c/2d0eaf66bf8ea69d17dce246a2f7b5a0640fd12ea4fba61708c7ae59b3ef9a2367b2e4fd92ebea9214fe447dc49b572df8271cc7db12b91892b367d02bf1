{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport Container from '../../components/container';\nimport PostBody from '../../components/post-body';\nimport Header from '../../components/header';\nimport PostHeader from '../../components/post-header';\nimport Layout from '../../components/layout';\nimport { getPostBySlug, getAllPosts } from '../../lib/api';\nimport PostTitle from '../../components/post-title';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../../lib/constants';\nimport markdownToHtml from '../../lib/markdownToHtml';\nexport default function Post({\n  post,\n  morePosts,\n  preview\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post !== null && post !== void 0 && post.slug)) {\n    return /*#__PURE__*/_jsx(ErrorPage, {\n      statusCode: 404\n    });\n  }\n\n  return /*#__PURE__*/_jsx(Layout, {\n    preview: preview,\n    children: /*#__PURE__*/_jsxs(Container, {\n      children: [/*#__PURE__*/_jsx(Header, {}), router.isFallback ? /*#__PURE__*/_jsx(PostTitle, {\n        children: \"Loading\\u2026\"\n      }) : /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsxs(\"article\", {\n          className: \"mb-32\",\n          children: [/*#__PURE__*/_jsxs(Head, {\n            children: [/*#__PURE__*/_jsxs(\"title\", {\n              children: [post.title, \" | Next.js Blog Example with \", CMS_NAME]\n            }), /*#__PURE__*/_jsx(\"meta\", {\n              property: \"og:image\",\n              content: post.ogImage.url\n            })]\n          }), /*#__PURE__*/_jsx(PostHeader, {\n            title: post.title,\n            coverImage: post.coverImage,\n            date: post.date,\n            author: post.author\n          }), /*#__PURE__*/_jsx(PostBody, {\n            content: post.content\n          })]\n        })\n      })]\n    })\n  });\n}\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, ['title', 'date', 'slug', 'author', 'content', 'ogImage', 'coverImage']);\n  const content = await markdownToHtml(post.content || '');\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":null,"metadata":{},"sourceType":"module"}